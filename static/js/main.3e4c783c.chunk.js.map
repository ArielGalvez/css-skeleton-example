{"version":3,"sources":["api/index.js","components/Likes/index.jsx","components/Card/index.jsx","components/CardList/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["getImages","a","page","UNSPLASH_CLIENT_ID","process","axios","get","data","Likes","React","memo","count","className","prevProps","nextProps","Card","urls","alt_description","user","likes","description","color","src","small","alt","style","backgroundColor","profile_image","name","EXTRA_DELAY","parseInt","CardList","useState","setData","setCount","useEffect","setTimeout","then","res","initialScrollY","scrollThreshold","overflow","dataLength","length","next","hasMore","loader","Array","fill","map","card","index","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mVAEaA,EAAS,uCAAG,8CAAAC,EAAA,6DAAOC,EAAP,+BAAc,EAC/BC,EAAqBC,8CADJ,SAEAC,IAAMC,IAAN,qDAAwDH,EAAxD,iBAAmFD,IAFnF,uBAEfK,EAFe,EAEfA,KAFe,kBAGhBA,GAHgB,2CAAH,qDCETC,G,MAAQC,IAAMC,MAAK,oBAAEC,aAAF,MAAU,EAAV,SAE5B,sBAAKC,UAAU,QAAf,UACE,sBAAMA,UAAU,cAAhB,SAA+BD,IAC/B,qBAAKC,UAAU,gBAGnB,SAACC,EAAWC,GACV,OAAID,EAAUF,QAAUG,EAAUH,UCPzBI,G,MAAON,IAAMC,MAAK,YAAa,IAAD,EAAVH,EAAU,EAAVA,KACvBS,EAA2DT,EAA3DS,KAAMC,EAAqDV,EAArDU,gBAAiBC,EAAoCX,EAApCW,KAAMC,EAA8BZ,EAA9BY,MAAOC,EAAuBb,EAAvBa,YAAaC,EAAUd,EAAVc,MACzD,OACE,oBAAIT,UAAU,OAAd,SAEII,GACA,qCACE,qBAAKJ,UAAU,UAAUU,IAAG,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAMO,MAAOC,IAAKP,EAAiBQ,MAAQ,CAAEC,gBAAiBL,KAC5F,sBAAKT,UAAU,YAAf,UACE,mCAAIK,QAAJ,IAAIA,IAAkBG,IACtB,cAAC,EAAD,CAAOT,MAAOQ,OAEhB,qBAAKP,UAAU,SAASU,IAAG,UAAEJ,EAAKS,qBAAP,aAAE,EAAoBJ,MAAOC,IAAG,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAMU,OACnE,sBAAMhB,UAAU,cAAhB,SAA+BM,EAAKU,gBCVxCC,G,MAAcC,SAAQ,UAAC1B,QAAD,EAAqC,MAEpD2B,EAAW,WAAO,IAAD,EACJC,mBAAS,IADL,mBACrBzB,EADqB,KACf0B,EADe,OAEFD,mBAAS,GAFP,mBAErBrB,EAFqB,KAEduB,EAFc,KAI5BC,qBAAU,WAMR,OALAC,YAAW,WACTpC,IAAYqC,MAAK,SAAAC,GACfL,EAAQK,QAETT,GACI,WACLI,EAAQ,IACRC,EAAS,MAEV,IAWH,OACE,cAAC,IAAD,CACEK,eAAgB,EAChBC,gBAAiB,EACjBf,MAAO,CAACgB,SAAU,UAClB7B,UAAU,YACV8B,WAAYnC,EAAKoC,OACjBC,KAhBgB,WAClBR,YAAW,WACTpC,EAAUW,EAAM,GAAG0B,MAAK,SAAAC,GACtBJ,EAASvB,EAAM,GACfsB,EAAQ,GAAD,mBAAK1B,GAAL,YAAc+B,UAEtBT,IAWDgB,SAAS,EACTC,OArCmB,IAAIC,MAAM,IAAIC,KAAK,IAqCjBC,KAAI,SAACC,EAAMC,GAAP,aAAkB,cAAC,EAAD,CAA4B5C,KAAM2C,GAAlC,UAAWA,EAAKE,UAAhB,QAAqBD,MARlE,SAUG5C,EAAK0C,KAAI,SAACC,EAAMC,GAAP,OAAkB,cAAC,EAAD,CAAmD5C,KAAM2C,GAA9CA,EAAKE,GAAL,UAAYD,EAAZ,YAAqBD,EAAKE,IAAOD,SClC/DE,MARf,WACE,OACE,qBAAKzC,UAAU,MAAf,SACE,cAAC,EAAD,OCKS0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3e4c783c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const getImages = async (page = 1) => {\r\n  const UNSPLASH_CLIENT_ID = process.env.REACT_APP_UNSPLASH_CLIENT_ID;\r\n  const { data } = await axios.get(`https://api.unsplash.com/photos/?client_id=${UNSPLASH_CLIENT_ID}&page=${page}`);\r\n  return data;\r\n}\r\n","import React from 'react';\r\n\r\nimport './Likes.css';\r\n\r\nexport const Likes = React.memo(({count = 0}) =>\r\n  (\r\n    <div className=\"likes\">\r\n      <span className=\"likes-count\">{count}</span>\r\n      <div className=\"heart\"></div>\r\n    </div>\r\n  ),\r\n  (prevProps, nextProps) => {\r\n    if (prevProps.count === nextProps.count) return true;\r\n    return false;\r\n  }\r\n);\r\n","import React from 'react'\r\n\r\nimport { Likes } from '../Likes';\r\nimport './Card.css';\r\n\r\nexport const Card = React.memo(({data}) => {\r\n  const { urls, alt_description, user, likes, description, color } = data;\r\n  return (\r\n    <li className=\"card\">\r\n      {\r\n        urls &&\r\n        <>\r\n          <img className=\"picture\" src={urls?.small} alt={alt_description} style= {{ backgroundColor: color }}/>\r\n          <div className=\"card-info\">\r\n            <p>{alt_description?? description}</p>\r\n            <Likes count={likes}/>\r\n          </div>\r\n          <img className=\"avatar\" src={user.profile_image?.small} alt={user?.name}/>\r\n          <span className=\"avatar-name\">{user.name}</span>\r\n        </>\r\n      }\r\n    </li>\r\n  )\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { getImages } from '../../api';\r\nimport { Card } from '../Card';\r\n\r\nimport './CardList.css';\r\n\r\nconst loaderData = () => new Array(10).fill({});\r\nconst EXTRA_DELAY = parseInt(process.env.REACT_APP_EXTRA_DELAY?? 1000);\r\n\r\nexport const CardList = () => {\r\n  const [data, setData] = useState([]);\r\n  const [count, setCount] = useState(1);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      getImages().then(res => {\r\n        setData(res);\r\n      });\r\n    }, EXTRA_DELAY);\r\n    return () => {\r\n      setData([]);\r\n      setCount(1);\r\n    }\r\n  }, [])\r\n\r\n  const fetchImages = () => {\r\n    setTimeout(() => {\r\n      getImages(count+1).then(res => {\r\n        setCount(count+1);\r\n        setData([...data, ...res])\r\n      });\r\n    }, EXTRA_DELAY);\r\n  };\r\n\r\n  return (\r\n    <InfiniteScroll\r\n      initialScrollY={0}\r\n      scrollThreshold={1}\r\n      style={{overflow: 'hidden'}}\r\n      className=\"card-list\"\r\n      dataLength={data.length}\r\n      next={fetchImages}\r\n      hasMore={true}\r\n      loader={loaderData().map((card, index) => (<Card key={card.id?? index} data={card} />))}\r\n    >\r\n      {data.map((card, index) => (<Card key={card.id? `${index}-${card.id}` : index} data={card} />))}\r\n    </InfiniteScroll>\r\n  )\r\n}\r\n","import React from 'react';\n\nimport { CardList } from './components/CardList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CardList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}